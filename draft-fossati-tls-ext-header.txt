



TLS Working Group                                             T. Fossati
Internet-Draft                                                     Nokia
Intended status: Standards Track                    N. Mavrogiannopoulos
Expires: July 21, 2018                                            RedHat
                                                        January 17, 2018


               Record Header Extensions for TLS and DTLS
                  draft-fossati-tls-ext-header-latest

Abstract

   This document proposes a mechanism to extend the record header in TLS
   and DTLS.  To that aim, the (D)TLS header is modified as follows: the
   length field is trimmed to 15 bits, and the length's top bit is given
   the "record header extension indicator" semantics.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on July 21, 2018.

Copyright Notice

   Copyright (c) 2018 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document.  Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document.  Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.



Fossati & MavrogiannopouloExpires July 21, 2018                 [Page 1]

Internet-Draft  Record Header Extensions for TLS and DTLS   January 2018


Table of Contents

   1.  Introduction  . . . . . . . . . . . . . . . . . . . . . . . .   2
   2.  Length Redefined  . . . . . . . . . . . . . . . . . . . . . .   2
   3.  Record Header Extension . . . . . . . . . . . . . . . . . . .   3
     3.1.  Format  . . . . . . . . . . . . . . . . . . . . . . . . .   3
     3.2.  Negotiation . . . . . . . . . . . . . . . . . . . . . . .   3
     3.3.  Backwards Compatibility . . . . . . . . . . . . . . . . .   4
     3.4.  Use with Connection ID  . . . . . . . . . . . . . . . . .   4
   4.  Security Considerations . . . . . . . . . . . . . . . . . . .   4
   5.  Privacy Considerations  . . . . . . . . . . . . . . . . . . .   4
   6.  IANA Considerations . . . . . . . . . . . . . . . . . . . . .   4
   7.  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . .   5
   8.  References  . . . . . . . . . . . . . . . . . . . . . . . . .   5
     8.1.  Normative References  . . . . . . . . . . . . . . . . . .   5
     8.2.  Informative References  . . . . . . . . . . . . . . . . .   5
   Authors' Addresses  . . . . . . . . . . . . . . . . . . . . . . .   5

1.  Introduction

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in [RFC2119].

2.  Length Redefined

   [RFC5246] requires the size of TLS record payloads to not exceed
   2^14, which means that the first bit in the length field of the TLS
   record header is unused.

   The proposal (Figure 1) here is to shorten the length field to 15
   bits and use the top bit (E) to signify the presence / absence of a
   record header extension.

    0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5
   +-+-+-+-+-+-+-+-+
   |  ContentType  |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   |            Version            |E|            Length           |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
   ~                (optional) Extension Header(s)                 ~
   +~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~+
   |         Payload (including optional MAC and padding)          |
   +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

                        Figure 1: Length redefined





Fossati & MavrogiannopouloExpires July 21, 2018                 [Page 2]

Internet-Draft  Record Header Extensions for TLS and DTLS   January 2018


   Length includes any record header extension that is included in this
   record.

   In the reminder, the top bit is called the E-bit.

3.  Record Header Extension

3.1.  Format

   If the E-bit is asserted, then a record header extension is appended
   to the regular header with the following format:

   +-+-+-+-+-+-+-+-+------------+------------
   |M|   Type      | Length ... | Value ... |
   +-+-+-+-+-+-+-+-+------------+-----------+

   Where:

   o  M has the same semantics as the E-bit in the regular header -
      i.e.: if it is asserted, another extension header follows this
      one;

   o  Type is a fixed length (7-bits) field that defines the way Value
      has to be interpreted;

   o  Length is the length of Value in bytes.  Every record header
      extension defines the size of its Length field as the minimal
      amount of bytes needed to encode the length of any legit Value for
      this Type;

   o  Value is the extension itself.

3.2.  Negotiation

   A record header extension is allowed only if it has been negotiated
   via a companion TLS extension.

   An endpoint MUST NOT send a record header extension if it hasn't been
   successfully negotiated with the receiver.

   An endpoint that receives an unexpected record header extension MUST
   abort the session.

   Record header extensions MUST NOT be sent during the initial
   handshake phase.






Fossati & MavrogiannopouloExpires July 21, 2018                 [Page 3]

Internet-Draft  Record Header Extensions for TLS and DTLS   January 2018


3.3.  Backwards Compatibility

   A legacy endpoint that receives a record header extension will
   interpret it as an invalid length field [RFC5246] and abort the
   session accordingly.

   Note that this is equivalent to the behaviour of an endpoint
   implementing this spec which receives a non-negotiated record header
   extension.

3.4.  Use with Connection ID

   A plausible use of this mechanism is in relation with the CID
   extension defined in [I-D.ietf-tls-dtls-connection-id].

   In such case, the companion record header extension could be defined
   as follows:

   o  Type: 0x01

   o  Length: 1-byte unsigned int

   o  Value: the CID itself

   Note that, compared to all other possible ways to express presence/
   absence of a CID field within the constrains of the current header
   format (e.g., bumping the Version field, assigning new ContentType's,
   using an invalid length), an ad hoc record header extension provides
   a cleaner approach that can be used with any TLS version at a
   reasonable cost (2 bytes per record).

4.  Security Considerations

   o  TODO discuss on-path active attacker - trying to modify an
      existing record header extension or insert a new one

5.  Privacy Considerations

   o  TODO discuss metadata insertion - privacy implications must be
      discussed on a per extension basis

6.  IANA Considerations

   This document defines a new IANA registry that, for each record
   header extension, shall provide:

   o  the Type codepoint;




Fossati & MavrogiannopouloExpires July 21, 2018                 [Page 4]

Internet-Draft  Record Header Extensions for TLS and DTLS   January 2018


   o  the Length size in bytes.

7.  Acknowledgements

   TODO

8.  References

8.1.  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997, <https://www.rfc-
              editor.org/info/rfc2119>.

   [RFC5246]  Dierks, T. and E. Rescorla, "The Transport Layer Security
              (TLS) Protocol Version 1.2", RFC 5246,
              DOI 10.17487/RFC5246, August 2008, <https://www.rfc-
              editor.org/info/rfc5246>.

   [RFC6066]  Eastlake 3rd, D., "Transport Layer Security (TLS)
              Extensions: Extension Definitions", RFC 6066,
              DOI 10.17487/RFC6066, January 2011, <https://www.rfc-
              editor.org/info/rfc6066>.

8.2.  Informative References

   [I-D.ietf-tls-dtls-connection-id]
              Rescorla, E., Tschofenig, H., Fossati, T., and T. Gondrom,
              "The Datagram Transport Layer Security (DTLS) Connection
              Identifier", draft-ietf-tls-dtls-connection-id-00 (work in
              progress), December 2017.

Authors' Addresses

   Thomas Fossati
   Nokia

   Email: thomas.fossati@nokia.org


   Nikos Mavrogiannopoulos
   RedHat

   Email: nmav@redhat.com






Fossati & MavrogiannopouloExpires July 21, 2018                 [Page 5]
